{"version":3,"file":"places.service.js","sourceRoot":"","sources":["../../../../src/app/services/places.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAG,KAAK,EAAE,MAAM,eAAe,CAAC;AACvC,OAAO,uBAAuB,CAAC;;IAqB7B,uBAAoB,KAAY;QAAZ,UAAK,GAAL,KAAK,CAAO;uBAhBV;YACpB;gBACE,GAAG,EAAE,SAAS;gBACd,IAAI,EAAE,4DAA4D;gBAClE,mEAAmE;aACpE;YACD;gBACE,GAAG,EAAE,OAAO;;gBAEZ,IAAI,EAAE,4EAA4E;aACnF;YACD;gBACE,GAAG,EAAE,MAAM;gBACX,IAAI,EAAE,6FAA6F;aACpG;SACF;KAGA;IAGD,wCAAgB,GAAhB,UAAiB,OAAgB;QAC/B,IAAI,MAAM,GAAM,OAAO,6BAA0B,CAAC;QAClD,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC;aAC9B,GAAG,CAAC,UAAA,GAAG;YACN,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,CAAA;SAClB,CAAC,CAAC;KACN;IACD,kCAAU,GAAV;QACE,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;KACrB;;gBAhCF,UAAU;;;;gBAJD,KAAK;;wBADf;;SAMa,aAAa","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport {  Jsonp } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\n@Injectable()\r\nexport class PlacesService {  \r\n  apiList: Array<any> = [\r\n    {\r\n      key: 'country',\r\n      path: 'https://battuta.medunes.net/api/country/all/?key={{token}}'\r\n      //path: 'https://api.geonames.org/countryInfo?username=prakash_geo'\r\n    },\r\n    {\r\n      key: 'state',\r\n      //path: 'http://api.geonames.org/children?geonameId={{geonameId}}&username=prakash_geo'\r\n      path: 'https://battuta.medunes.net/api/region/{{country_code}}/all/?key={{token}}'\r\n    },\r\n    {\r\n      key: 'city',\r\n      path: 'https://battuta.medunes.net/api/city/{{country_code}}/search/?region={{city}}&key={{token}}'\r\n    }\r\n  ];\r\n  constructor(private jsonp: Jsonp) {\r\n\r\n  }\r\n\r\n\r\n  getDataFromCloud(apipath : string) : Observable<any> {\r\n    let apiURL = `${apipath}&callback=JSONP_CALLBACK`;\r\n    return this.jsonp.request(apiURL)\r\n      .map(res => {\r\n        return res.json()\r\n      });\r\n  }\r\n  getApiList() : Array<any> {\r\n    return this.apiList;\r\n  }\r\n}\r\n\r\n\r\n"]}